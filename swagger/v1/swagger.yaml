---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/api/v1/users/{user_id}/reservations":
    get:
      summary: Get user car reservations
      tags:
      - Car Reservations
      parameters:
      - name: user_id
        in: path
        description: Current User ID
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: User Car reservation found
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    pickup_date:
                      type: date
                    return_date:
                      type: date
                    car:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        image:
                          type: string
                        model:
                          type: string
                        daily_price:
                          type: decimal
                        description:
                          type: string
                      required:
                      - id
                      - name
                      - image
                      - model
                      - daily_price
                      - description
                  required:
                  - id
                  - pickup_date
                  - return_date
                  - car
        '401':
          description: Car Reservation not found
    post:
      summary: Reserve A Car
      tags:
      - Create Car Reservation
      parameters:
      - name: user_id
        in: path
        description: Current User ID
        required: true
        schema:
          type: integer
      responses:
        '201':
          description: Reservation created successfully
        '401':
          description: You need to Sign in before continuing
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                pickup_date:
                  type: date
                return_date:
                  type: date
                car_id:
                  type: integer
              required:
              - pickup_date
              - return_date
              - car_id
  "/api/v1/users/{user_id}/reservations/{id}":
    delete:
      summary: Delete a car reservation
      tags:
      - Remove Car Reservation
      parameters:
      - name: user_id
        in: path
        description: Current User ID
        required: true
        schema:
          type: integer
      - name: id
        in: path
        description: Reservation ID
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Reservation deleted successfully
        '401':
          description: You need to Sign in before continuing
  "/api/v1/cars/":
    get:
      summary: List all Cars
      tags:
      - List All Cars
      responses:
        '200':
          description: List of cars found
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    image:
                      type: string
                    model:
                      type: string
                    daily_price:
                      type: decimal
                    description:
                      type: text
                  required:
                  - id
                  - name
                  - image
                  - model
                  - daily_price
                  - description
  "/api/v1/cars/{id}":
    get:
      summary: List all Cars
      tags:
      - List All Cars
      parameters:
      - name: id
        in: path
        description: Car ID
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Single Car was found
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  image:
                    type: string
                  model:
                    type: string
                  daily_price:
                    type: decimal
                  description:
                    type: text
                required:
                - id
                - name
                - image
                - model
                - daily_price
                - description
        '404':
          description: You need to Sign in before continuing
  "/api/v1/login":
    post:
      summary: Sign in User
      tags:
      - Login
      parameters: []
      responses:
        '200':
          description: User logged in successfully
        '401':
          description: Logged in failure
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
              - email
              - password
  "/api/v1/register":
    post:
      summary: Register User
      tags:
      - Sign Up
      parameters: []
      responses:
        '200':
          description: User registered successfully
        '422':
          description: Invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string
                password_confirmation:
                  type: string
              required:
              - name
              - email
              - password
              - password_confirmation
  "/api/v1/users/":
    get:
      summary: Show Current User
      tags:
      - Current User
      responses:
        '200':
          description: Current User found
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  email:
                    type: string
                required:
                - id
                - name
                - email
        '401':
          description: Current user not found
servers:
- url: http://{defaultHost}
  variables:
    defaultHost:
      default: www.example.com
